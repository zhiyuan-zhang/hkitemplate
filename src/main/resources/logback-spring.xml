<?xml version="1.0" encoding="UTF-8"?>
<configuration>

	<!-- 文件输出格式 -->
	<property name="PATTERN" value="%-12(%d{yyyy-MM-dd HH:mm:ss.SSS}) |-%-5level [%thread] %c [%L] -| %msg%n" />
	<!-- test文件路径 -->
	<property name="TEST_FILE_PATH" value="/logs/test.log" />
	<!-- pro文件路径 -->
	<property name="PRO_FILE_PATH" value="/logs/prod.log" />

	<!-- 开发环境 -->
	<springProfile name="dev">
		<appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
			<encoder>
				<pattern>%date [%thread] %-5level %logger{80}   %X{THREAD_ID}  || %msg%n</pattern>
			</encoder>
		</appender>
		<logger name="cn.timebusker.util" level="debug" />
		<root level="info">
			<appender-ref ref="CONSOLE" />
		</root>
	</springProfile>
	<!-- 测试环境 -->
	<springProfile name="test">

		<!-- 每天产生一个文件 -->
		<appender name="TEST-FILE-INFO" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<!-- 文件路径 -->
			<file>${TEST_FILE_PATH}</file>

			<layout class="ch.qos.logback.classic.PatternLayout">
				<pattern>${PATTERN}</pattern>
			</layout>
			<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<!-- 文件名称 -->
				<fileNamePattern>/logs/info.%d{yyyy-MM-dd}.log</fileNamePattern>
				<!-- 文件最大保存历史数量 -->
				<MaxHistory>100</MaxHistory>
			</rollingPolicy>

		</appender>


		<appender name="TEST-FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<!-- 文件路径 -->
			<file>/data/home/zhxt/zhxt-test/logs/error.log</file>
			<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<!-- 文件名称 -->
				<fileNamePattern>/data/home/zhxt/zhxt-test/logs/error.%d{yyyy-MM-dd}.log</fileNamePattern>
				<!-- 文件最大保存历史数量 -->
				<MaxHistory>100</MaxHistory>
			</rollingPolicy>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<pattern>${PATTERN}</pattern>
			</layout>
			<!-- 此日志文件只记录error级别的 -->
			<filter class="ch.qos.logback.classic.filter.LevelFilter">
				<level>ERROR</level>
				<onMatch>ACCEPT</onMatch>
				<onMismatch>DENY</onMismatch>
			</filter>

		</appender>

		<appender name="TEST-FILE-ERROR" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<!-- 文件路径 -->
			<file>/data/home/zhxt/zhxt-test/logs/error.log</file>
			<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<!-- 文件名称 -->
				<fileNamePattern>/data/home/zhxt/zhxt-test/logs/error.%d{yyyy-MM-dd}.log</fileNamePattern>
				<!-- 文件最大保存历史数量 -->
				<MaxHistory>100</MaxHistory>
			</rollingPolicy>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<pattern>${PATTERN}</pattern>
			</layout>
			<!-- 此日志文件只记录error级别的 -->
			<filter class="ch.qos.logback.classic.filter.LevelFilter">
				<level>ERROR</level>
				<onMatch>ACCEPT</onMatch>
				<onMismatch>DENY</onMismatch>
			</filter>

		</appender>
		<!-- 异步输出 -->
		<appender name="ASYNC-INFO" class="ch.qos.logback.classic.AsyncAppender">
			<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
			<discardingThreshold>0</discardingThreshold>
			<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
			<queueSize>256</queueSize>
			<!-- 添加附加的appender,最多只能添加一个 -->
			<appender-ref ref="TEST-FILE-INFO"/>
		</appender>

		<appender name="ASYNC-ERROR" class="ch.qos.logback.classic.AsyncAppender">
			<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
			<discardingThreshold>0</discardingThreshold>
			<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
			<queueSize>256</queueSize>
			<!-- 添加附加的appender,最多只能添加一个 -->
			<appender-ref ref="TEST-FILE-ERROR"/>
		</appender>



		<root level="info">
			<appender-ref ref="TEST-FILE-INFO"/>
			<appender-ref ref="TEST-FILE-ERROR"/>
		</root>
	</springProfile>


	<!-- 生产环境 -->
	<springProfile name="prod">
		<appender name="PROD_FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
			<file>${PRO_FILE_PATH}</file>
			<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
				<fileNamePattern>${PRO_FILE_PATH}/warn.%d{yyyy-MM-dd}.log</fileNamePattern>
				<MaxHistory>100</MaxHistory>
			</rollingPolicy>
			<layout class="ch.qos.logback.classic.PatternLayout">
				<pattern>${PATTERN}</pattern>
			</layout>
		</appender>
		<root level="warn">
			<appender-ref ref="PROD_FILE" />
		</root>
	</springProfile>
</configuration>
